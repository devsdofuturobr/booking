spring:
  application:
    name: booking

  # PostgreSQL Data Source Configuration
  datasource:
    url: ${DATASOURCE_URL:jdbc:postgresql://localhost:5432/booking_db}
    username: ${DATASOURCE_USERNAME:postgres}
    password: ${DATASOURCE_PASSWORD:postgres}
    driver-class-name: org.postgresql.Driver
    hikari:
      maximum-pool-size: 10
      minimum-idle: 5
      connection-timeout: 30000
      idle-timeout: 600000
      max-lifetime: 1800000

  # JPA/Hibernate Configuration
  jpa:
    hibernate:
      ddl-auto: ${JPA_HIBERNATE_DDL_AUTO:update}
    show-sql: true
    properties:
      hibernate:
        format_sql: ${JPA_SHOW_SQL:true}
        dialect: org.hibernate.dialect.PostgreSQLDialect

  # RabbitMQ Configuration
  rabbitmq:
    host: ${RABBITMQ_HOST:localhost}
    port: ${RABBITMQ_PORT:5672}
    username: ${RABBITMQ_USERNAME:admin}
    password: ${RABBITMQ_PASSWORD:admin123}
    virtual-host: /

# Server Configuration
server:
  port: ${SERVER_PORT:9002}

# Logging
logging:
  level:
    org:
      hibernate:
        SQL: DEBUG
        type:
          descriptor:
            sql:
              BasicBinder: TRACE
    org.springframework.amqp: DEBUG
    org.springframework.amqp.rabbit: DEBUG
    com.rabbitmq: DEBUG

broker:
  retry:
    max-attempts: 5
    initial-interval: 1000
    multiplier: 2.0
    max-interval: 10000